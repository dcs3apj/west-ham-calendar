# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           @controllers.Application.index

# Json (only allow POST to avoid JSON array vunerabilities).

POST     /seasons.json               @controllers.Application.seasons
POST     /base.json                  @controllers.Application.base
POST     /:season/games.json         @controllers.Application.games(season: Int)

# Game attendence

PUT     /attend/:gameId              @controllers.Update.attend(gameId: Long)
PUT     /unattend/:gameId            @controllers.Update.unattend(gameId: Long)

# Updates
POST     /update.html                @controllers.Update.update

# Calendars
GET     /calendars/:attended/:location/:type/aj.ics   @controllers.Calendar.searchSecure(attended, location, type)
GET     /calendars/$mask<(free|busy)>/:location/:type/calendar.ics   @controllers.Calendar.search(mask, location, type)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# FavIcon

GET	/favicon.ico		    controllers.Assets.at(path="/public", file="favicon.ico")
# Webjars
GET     /webjars/*file                    controllers.WebJarAssets.at(file)

# Secure Social
# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling 
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized
